{"version":3,"file":"62c26169-36ed-4931-811e-5b5f1bb69e44.mjs","sources":["../../../src/mastra/tools/read-file.tool.ts"],"sourcesContent":["import { getSandbox } from \"@/inngest/utils\";\nimport { createTool } from \"@mastra/core/tools\";\nimport { z } from \"zod\";\n\nexport const readFileTool = createTool({\n  id: \"read-file\",\n  description: `\n  - Read file content as a string.\n  - You can pass text, bytes, blob, or stream to opts.format to change the return type.\n`,\n  inputSchema: z.object({\n    paths: z.array(z.string()).describe(\"Path to a file.\"),\n    sandboxId: z.string().describe(\"The sandbox ID\"),\n  }),\n  outputSchema: z.object({\n    files: z.array(\n      z.object({\n        path: z.string().describe(\"Path to a file.\"),\n        content: z.string().describe(\"The content of the file.\"),\n      }),\n    ),\n  }),\n  execute: async ({ context }) => {\n    const { paths, sandboxId } = context;\n    const sandbox = await getSandbox(sandboxId);\n    try {\n      const files = await Promise.all(\n        paths.map(async (path) => ({\n          path,\n          content: await sandbox.files.read(path),\n        })),\n      );\n      return {\n        files,\n      };\n    } catch (error: unknown) {\n      return {\n        files: [],\n      };\n    }\n  },\n});\n"],"names":[],"mappings":";;;;;;AAIO,MAAM,eAAe,UAAA,CAAW;AAAA,EACrC,EAAA,EAAI,WAAA;AAAA,EACJ,WAAA,EAAa;AAAA;AAAA;AAAA,CAAA;AAAA,EAIb,WAAA,EAAa,EAAE,MAAA,CAAO;AAAA,IACpB,KAAA,EAAO,EAAE,KAAA,CAAM,CAAA,CAAE,QAAQ,CAAA,CAAE,SAAS,iBAAiB,CAAA;AAAA,IACrD,SAAA,EAAW,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,gBAAgB;AAAA,GAChD,CAAA;AAAA,EACD,YAAA,EAAc,EAAE,MAAA,CAAO;AAAA,IACrB,OAAO,CAAA,CAAE,KAAA;AAAA,MACP,EAAE,MAAA,CAAO;AAAA,QACP,IAAA,EAAM,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,iBAAiB,CAAA;AAAA,QAC3C,OAAA,EAAS,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,0BAA0B;AAAA,OACxD;AAAA;AACH,GACD,CAAA;AAAA,EACD,OAAA,EAAS,OAAO,EAAE,OAAA,EAAQ,KAAM;AAC9B,IAAA,MAAM,EAAE,KAAA,EAAO,SAAA,EAAU,GAAI,OAAA;AAC7B,IAAA,MAAM,OAAA,GAAU,MAAM,UAAA,CAAW,SAAS,CAAA;AAC1C,IAAA,IAAI;AACF,MAAA,MAAM,KAAA,GAAQ,MAAM,OAAA,CAAQ,GAAA;AAAA,QAC1B,KAAA,CAAM,GAAA,CAAI,OAAO,IAAA,MAAU;AAAA,UACzB,IAAA;AAAA,UACA,OAAA,EAAS,MAAM,OAAA,CAAQ,KAAA,CAAM,KAAK,IAAI;AAAA,SACxC,CAAE;AAAA,OACJ;AACA,MAAA,OAAO;AAAA,QACL;AAAA,OACF;AAAA,IACF,SAAS,KAAA,EAAgB;AACvB,MAAA,OAAO;AAAA,QACL,OAAO;AAAC,OACV;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;;"}