{"version":3,"file":"da46c5b5-adf9-45b3-975c-4f45b3c3b5ca.mjs","sources":["../../../src/mastra/tools/write-file.tool.ts"],"sourcesContent":["import { getSandbox } from \"@/inngest/utils\";\nimport { createTool } from \"@mastra/core/tools\";\nimport { z } from \"zod\";\n\nexport const writeFileTool = createTool({\n  id: \"write-file\",\n  description: `\n  - Write content to a file.\n  - Writing to a file that doesn't exist creates the file.\n  - Writing to a file that already exists overwrites the file.\n  - Writing to a file at path that doesn't exist creates the necessary directories.\n  `,\n  inputSchema: z.object({\n    files: z.array(\n      z.object({\n        path: z.string().describe(\"Path to a file.\"),\n        data: z.string().describe(\"Content to write to the file.\"),\n      }),\n    ),\n    sandboxId: z.string().describe(\"The sandbox ID\"),\n  }),\n  outputSchema: z.object({\n    success: z.boolean(),\n    message: z.string(),\n  }),\n  execute: async ({ context }) => {\n    const { files, sandboxId } = context;\n\n    const sandbox = await getSandbox(sandboxId);\n    try {\n      await Promise.all(\n        files.map((file) => sandbox.files.write(file.path, file.data)),\n      );\n\n      return {\n        success: true,\n        message: `Successfully wrote ${files.length} file(s) to sandbox ${sandboxId}.`,\n      };\n    } catch (error: unknown) {\n      return {\n        success: false,\n        message: `Failed to write file(s) to sandbox ${sandboxId}: ${error instanceof Error ? error.message : String(error)}`,\n      };\n    }\n  },\n});\n"],"names":[],"mappings":";;;;;;AAIO,MAAM,gBAAgB,UAAA,CAAW;AAAA,EACtC,EAAA,EAAI,YAAA;AAAA,EACJ,WAAA,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA,CAAA;AAAA,EAMb,WAAA,EAAa,EAAE,MAAA,CAAO;AAAA,IACpB,OAAO,CAAA,CAAE,KAAA;AAAA,MACP,EAAE,MAAA,CAAO;AAAA,QACP,IAAA,EAAM,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,iBAAiB,CAAA;AAAA,QAC3C,IAAA,EAAM,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,+BAA+B;AAAA,OAC1D;AAAA,KACH;AAAA,IACA,SAAA,EAAW,CAAA,CAAE,MAAA,EAAO,CAAE,SAAS,gBAAgB;AAAA,GAChD,CAAA;AAAA,EACD,YAAA,EAAc,EAAE,MAAA,CAAO;AAAA,IACrB,OAAA,EAAS,EAAE,OAAA,EAAQ;AAAA,IACnB,OAAA,EAAS,EAAE,MAAA;AAAO,GACnB,CAAA;AAAA,EACD,OAAA,EAAS,OAAO,EAAE,OAAA,EAAQ,KAAM;AAC9B,IAAA,MAAM,EAAE,KAAA,EAAO,SAAA,EAAU,GAAI,OAAA;AAE7B,IAAA,MAAM,OAAA,GAAU,MAAM,UAAA,CAAW,SAAS,CAAA;AAC1C,IAAA,IAAI;AACF,MAAA,MAAM,OAAA,CAAQ,GAAA;AAAA,QACZ,KAAA,CAAM,GAAA,CAAI,CAAC,IAAA,KAAS,OAAA,CAAQ,KAAA,CAAM,KAAA,CAAM,IAAA,CAAK,IAAA,EAAM,IAAA,CAAK,IAAI,CAAC;AAAA,OAC/D;AAEA,MAAA,OAAO;AAAA,QACL,OAAA,EAAS,IAAA;AAAA,QACT,OAAA,EAAS,CAAA,mBAAA,EAAsB,KAAA,CAAM,MAAM,uBAAuB,SAAS,CAAA,CAAA;AAAA,OAC7E;AAAA,IACF,SAAS,KAAA,EAAgB;AACvB,MAAA,OAAO;AAAA,QACL,OAAA,EAAS,KAAA;AAAA,QACT,OAAA,EAAS,CAAA,mCAAA,EAAsC,SAAS,CAAA,EAAA,EAAK,KAAA,YAAiB,QAAQ,KAAA,CAAM,OAAA,GAAU,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,OACrH;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;;"}